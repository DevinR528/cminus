linked fn write<T>(_: T);

fn main() {
    let cost = [0; 900]; // TODO: flip this? so it's [400; 0] 400 zeros

    let source = [0; 30];
    let target = [0; 30];

    let m = 30;
    let n = 30;
    let i = 0;
    while (i < m) {
        cost[i*m] = i;
        target[i] = i+1;
        i = i + 1;
    }

    let j = 0;
    while (j < n) {
        cost[j] = j;
        target[j] = 2 * (j+1);
        j = j + 1;
    }

    i = 1;
    while (i < m) {
        j = 1;
        while (j < n) {
            cost[i*m+j] = cost[(i - 1)*m+j - 1];

            if (target[i] != source[j]) {
                cost[i*m+j] = cost[i*m+j] + 1;
            }

            if (cost[(i - 1)*m+j] < cost[i*m+j]) {
                cost[i*m+j] = cost[(i-1)*m+j] + 1;
            }

            if (cost[i*m+j - 1] < cost[i*m+j]) {
                cost[i*m+j] = cost[i*m+j - 1] + 1;
            }
            j = j + 1;
        }
        i = i + 1;
    }

    write::<int>(m);
    write::<int>(n);
    write::<int>(cost[899]);
}
