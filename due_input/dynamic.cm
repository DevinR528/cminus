linked fn write<T>(_: T);

fn main() {
    let cost = [0; 400]; // TODO: flip this? so it's [400; 0] 400 zeros

    let source = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0];
    let target = [0, 1, 3, 5, 7, 9, 1, 4, 3, 2, 1, 9, 8, 7, 6, 0];

    let size = 20;
    let n = 0;

    while (source[n+1] != 0) {
        cost[n] = n;
        n = n + 1;
    }

    write::<string>("here");

    let m = 0;
    while (target[m+1] != 0) {
        cost[m*size] = m;
        m = m + 1;
    }

    let i = 1;
    while (i <= m) {
        let j = 1;

        while (j <= n) {
            cost[i*size+j] = cost[(i - 1)*size+j - 1];

            if (target[i] != source[j]) {
                write::<int>(j+i);
                cost[i*size+j] = cost[i*size+j] + 1;
            }

            if (cost[(i-1)*size+j] < cost[i*size+j]) {
                cost[i*size+j] = cost[(i - 1)*size+j] + 1;
            }

            if (cost[i*size+j - 1] < cost[i*size+j]) {
                cost[i*size+j] = cost[i*size+j - 1] + 1;
            }
            j += 1;
        }
        i = i + 1;
    }
    i = 0;
    while (i < 100) {
        write::<int>(cost[i]);
        i += 1;
    }

    write::<int>(m);
    write::<int>(n);
    write::<int>(cost[m*size+n]);
    exit;
}
