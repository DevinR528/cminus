linked fn write<T>(_: T);

enum option {
    foo(char, int),
    some,
    none,
}

fn main() {
    let x = enum option::foo('c', 11);
    match x {
        // TODO: if `ch` or `num` is bound to a var named `x` weird stuff happens...
        option::foo(ch, num) -> {
            write::<char>(ch);
            write::<int>(num);
        },
        option::some -> {
            write::<string>("some variant");
        },
        option::none -> {
            exit;
        }
    }
}
