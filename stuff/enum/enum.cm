enum option<T> {
    some(T),
    none,
}

enum thing {
    a, b, c, d, e, f, g
}

enum option<T> foo<T>(T it) {
    enum option<T> opt;
    opt = option::some(it);
    return opt;
}

void main() {
    enum thing x;
    x = thing::a;

    enum option<thing> y;
    y = option::some(x);

    enum option<thing>* opt;
    opt = &y;

    enum option<int> num;
    foo::<int>(10);
    num = foo::<int>(10);

    match num {
        option::some(a) -> {
            a += 1;
        },
        option::none -> {
            exit;
        }
    }
}
