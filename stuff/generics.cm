// Generic list data structure with push and constructor "method" for stuff.

T* alloc<T>(int size) {
    // TODO
    T* x;
    return x;
}

struct list<T> {
    int len;
    int cap;
    T* buf;
}

struct list<T> list<T>(int size) {
    struct list<T> x;
    x = list {
        len: 0,
        cap: size,
        buf: alloc::<T>(size),
    };
    return x;
}

void push<T>(struct list<T>* this, T item) {
    if (this->cap <= this->len) {
        // allocate ...
    } else {
        this->buf += this->len;
        *this->buf = item;
        this->len += 1;
    }
}

void main() {
    struct list<int> x;
    x = list::<int>(3);
    push::<int>(&x, 10);
}
