/*
Very bad fibinocci number finder: useful to test a lot of recursion.
Use small numbers.

Eric Johnson,  ejohn
*/

// TODO:

linked fn write<T>(_: T);
linked fn read(_: int);

const globalCount: int = 0;
const input: int = 0;
const i: int = 0;
const counter: int = 0;

fn fib1 (x: int): int
{
globalCount = globalCount + 1;
if ((x == 1) || (x == 0)) {
    return (1);
}
else {
    return fib1(x - 1) + fib1(x - 2);
}
}

fn main()
{
write ("Enter number of fib numbers to find:");
read (i);
counter = 1;
while (counter <= i)
    {
    globalCount = 0;
    write ("");
    write ("Enter fib number to find:");
    read (input);
    input = fib1 (input);
    write ("Result:");
    write (input);
    write ("Number of fib1s executed:");
    write (globalCount);
    counter = counter + 1;
    }
write ("Bye");
}
