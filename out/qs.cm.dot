digraph ast {
0[label = PGM, shape = ellipse]
1[label = "var A", shape = ellipse]
0 -> 1
2[label = "func readarray", shape = ellipse]
0 -> 2
3[label = "var i", shape = ellipse]
2 -> 3
4[label = "write call", shape = ellipse]
2 -> 4
5[label = "value string 'A?'", shape = ellipse]
4 -> 5
6[label = "assign i", shape = ellipse]
2 -> 6
7[label = "value int 1", shape = ellipse]
6 -> 7
8[label = "while loop", shape = ellipse]
2 -> 8
9[label = "expr BinOp Lt", shape = ellipse]
2 -> 9
10[label = "ident i", shape = ellipse]
9 -> 10
11[label = "value int 20", shape = ellipse]
9 -> 11
12[label = "block", shape = ellipse]
2 -> 12
13[label = "write call", shape = ellipse]
12 -> 13
14[label = "ident i", shape = ellipse]
13 -> 14
15[label = "read(A[i])", shape = ellipse]
12 -> 15
16[label = "assign i", shape = ellipse]
12 -> 16
17[label = "expr BinOp Add", shape = ellipse]
16 -> 17
18[label = "ident i", shape = ellipse]
17 -> 18
19[label = "value int 1", shape = ellipse]
17 -> 19
20[label = "func writearray", shape = ellipse]
0 -> 20
21[label = "var i", shape = ellipse]
20 -> 21
22[label = "write call", shape = ellipse]
20 -> 22
23[label = "value string 'A:'", shape = ellipse]
22 -> 23
24[label = "assign i", shape = ellipse]
20 -> 24
25[label = "value int 0", shape = ellipse]
24 -> 25
26[label = "while loop", shape = ellipse]
20 -> 26
27[label = "expr BinOp Le", shape = ellipse]
20 -> 27
28[label = "ident i", shape = ellipse]
27 -> 28
29[label = "value int 20", shape = ellipse]
27 -> 29
30[label = "block", shape = ellipse]
20 -> 30
31[label = "write call", shape = ellipse]
30 -> 31
32[label = "ident A[i]", shape = ellipse]
31 -> 32
33[label = "assign i", shape = ellipse]
30 -> 33
34[label = "expr BinOp Add", shape = ellipse]
33 -> 34
35[label = "ident i", shape = ellipse]
34 -> 35
36[label = "value int 1", shape = ellipse]
34 -> 36
37[label = "func partition", shape = ellipse]
0 -> 37
38[label = "var i", shape = ellipse]
37 -> 38
39[label = "var j", shape = ellipse]
37 -> 39
40[label = "var x", shape = ellipse]
37 -> 40
41[label = "var t", shape = ellipse]
37 -> 41
42[label = "assign x", shape = ellipse]
37 -> 42
43[label = "ident B[p]", shape = ellipse]
42 -> 43
44[label = "assign i", shape = ellipse]
37 -> 44
45[label = "expr BinOp Sub", shape = ellipse]
44 -> 45
46[label = "ident p", shape = ellipse]
45 -> 46
47[label = "value int 1", shape = ellipse]
45 -> 47
48[label = "assign j", shape = ellipse]
37 -> 48
49[label = "expr BinOp Add", shape = ellipse]
48 -> 49
50[label = "ident r", shape = ellipse]
49 -> 50
51[label = "value int 1", shape = ellipse]
49 -> 51
52[label = "while loop", shape = ellipse]
37 -> 52
53[label = "value int 1", shape = ellipse]
37 -> 53
54[label = "block", shape = ellipse]
37 -> 54
55[label = "assign j", shape = ellipse]
54 -> 55
56[label = "expr BinOp Sub", shape = ellipse]
55 -> 56
57[label = "ident j", shape = ellipse]
56 -> 57
58[label = "value int 1", shape = ellipse]
56 -> 58
59[label = "while loop", shape = ellipse]
54 -> 59
60[label = "expr BinOp Gt", shape = ellipse]
54 -> 60
61[label = "ident A[j]", shape = ellipse]
60 -> 61
62[label = "ident x", shape = ellipse]
60 -> 62
63[label = "block", shape = ellipse]
54 -> 63
64[label = "assign j", shape = ellipse]
63 -> 64
65[label = "expr BinOp Sub", shape = ellipse]
64 -> 65
66[label = "ident j", shape = ellipse]
65 -> 66
67[label = "value int 1", shape = ellipse]
65 -> 67
68[label = "assign i", shape = ellipse]
54 -> 68
69[label = "expr BinOp Add", shape = ellipse]
68 -> 69
70[label = "ident i", shape = ellipse]
69 -> 70
71[label = "value int 1", shape = ellipse]
69 -> 71
72[label = "while loop", shape = ellipse]
54 -> 72
73[label = "expr BinOp Lt", shape = ellipse]
54 -> 73
74[label = "ident A[i]", shape = ellipse]
73 -> 74
75[label = "ident x", shape = ellipse]
73 -> 75
76[label = "block", shape = ellipse]
54 -> 76
77[label = "assign i", shape = ellipse]
76 -> 77
78[label = "expr BinOp Add", shape = ellipse]
77 -> 78
79[label = "ident i", shape = ellipse]
78 -> 79
80[label = "value int 1", shape = ellipse]
78 -> 80
81[label = "if call", shape = ellipse]
54 -> 81
82[label = "expr BinOp Lt", shape = ellipse]
81 -> 82
83[label = "ident i", shape = ellipse]
82 -> 83
84[label = "ident j", shape = ellipse]
82 -> 84
85[label = "assign t", shape = ellipse]
81 -> 85
86[label = "ident A[i]", shape = ellipse]
85 -> 86
87[label = "assign A[i]", shape = ellipse]
81 -> 87
88[label = "ident A[j]", shape = ellipse]
87 -> 88
89[label = "assign A[j]", shape = ellipse]
81 -> 89
90[label = "ident t", shape = ellipse]
89 -> 90
91[label = "func quicksort", shape = ellipse]
0 -> 91
92[label = "var q", shape = ellipse]
91 -> 92
93[label = "var r", shape = ellipse]
91 -> 93
94[label = "if call", shape = ellipse]
91 -> 94
95[label = "expr BinOp Lt", shape = ellipse]
94 -> 95
96[label = "ident p", shape = ellipse]
95 -> 96
97[label = "ident r", shape = ellipse]
95 -> 97
98[label = "assign q", shape = ellipse]
94 -> 98
99[label = "call partition", shape = ellipse]
98 -> 99
100[label = "ident Z", shape = ellipse]
99 -> 100
101[label = "ident p", shape = ellipse]
99 -> 101
102[label = "ident r", shape = ellipse]
99 -> 102
103[label = "assign r", shape = ellipse]
94 -> 103
104[label = "call quicksort", shape = ellipse]
103 -> 104
105[label = "ident Z", shape = ellipse]
104 -> 105
106[label = "ident p", shape = ellipse]
104 -> 106
107[label = "ident q", shape = ellipse]
104 -> 107
108[label = "assign r", shape = ellipse]
94 -> 108
109[label = "call quicksort", shape = ellipse]
108 -> 109
110[label = "ident Z", shape = ellipse]
109 -> 110
111[label = "expr BinOp Add", shape = ellipse]
109 -> 111
112[label = "ident q", shape = ellipse]
111 -> 112
113[label = "value int 1", shape = ellipse]
111 -> 113
114[label = "ident r", shape = ellipse]
109 -> 114
115[label = "return", shape = ellipse]
91 -> 115
116[label = "value int 0", shape = ellipse]
115 -> 116
117[label = "func main", shape = ellipse]
0 -> 117
118[label = "var a", shape = ellipse]
117 -> 118
119[label = "assign A[0]", shape = ellipse]
117 -> 119
120[label = "value string '' ''", shape = ellipse]
119 -> 120
121[label = "assign A[20]", shape = ellipse]
117 -> 121
122[label = "value string ''~''", shape = ellipse]
121 -> 122
123[label = "call readarray", shape = ellipse]
117 -> 123
124[label = "assign a", shape = ellipse]
117 -> 124
125[label = "call quicksort", shape = ellipse]
124 -> 125
126[label = "ident A", shape = ellipse]
125 -> 126
127[label = "value int 1", shape = ellipse]
125 -> 127
128[label = "value int 19", shape = ellipse]
125 -> 128
129[label = "call writearray", shape = ellipse]
117 -> 129
}